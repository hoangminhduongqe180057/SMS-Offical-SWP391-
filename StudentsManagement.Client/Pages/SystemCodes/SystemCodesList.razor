@page "/systemCodes-list"
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]
@using StudentsManagement.Client.Services
@using StudentsManagement.Shared.Models
@inject NavigationManager navigation;
@inject IJSRuntime JsRunTime;
@rendermode @(new InteractiveServerRenderMode(prerender: false))

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">System Codes List</h3>
            </div>
            <div class="card-body">
                <div class="row">
                    <p><a class="btn btn-success float-end" href="/add-systemCode">Add New System Code</a></p>
                    <div class="col-md-12">
                        <div class="card">
                            <div class="card-header"></div>
                            @if (systemcodes == null)
                            {
                                <p><em>Loading System Codes...</em></p>
                            }
                            else if (!systemcodes.Items.Any())
                            {
                                <div class="alert alert-info"> There is no System Code List Available</div>
                            }
                            else
                            {
                                <div class="card-body">
                                    <table class="table table-striped table-hover">
                                        <thead>
                                            <tr>
                                                <th>Id</th>
                                                <th>Code</th>
                                                <th>Description</th>
                                                <th>View</th>
                                                <th>Edit</th>
                                                <th>Delete</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var systemCode in systemcodes.Items)
                                            {
                                                <tr>
                                                    <td>@systemCode.Id</td>
                                                    <td>@systemCode.Code</td>
                                                    <td>@systemCode.Description</td>
                                                    <td>
                                                        <a class="btn btn-primary" href="/systemCode/detail/@systemCode.Id"> View </a>
                                                    </td>
                                                    <td>
                                                        <a class="btn btn-success" href="/systemCode/edit/@systemCode.Id"> Edit </a>
                                                    </td>
                                                    <td>
                                                        <a class="btn btn-danger" @onclick="() => DeleteSystemCode(systemCode.Id)"> Delete </a>
                                                    </td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                    <!-- Pagination Controls -->
                                    <div class="button-group mt-3">
                                        <button class="btn btn-custom" @onclick="PreviousPage" style="@GetButtonStyle(!CanGoToPreviousPage)">Previous</button>
                                        <button class="btn btn-custom ms-2" @onclick="NextPage" style="@GetButtonStyle(!CanGoToNextPage)">Next</button>
                                    </div>
                                    <p class="mt-2">Page @systemcodes.CurrentPage of @systemcodes.TotalPages</p>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@code {
    private PaginationModel<SystemCode>? systemcodes;
    private int currentPage = 1;
    private int pageSize = 10;

    protected override async Task OnInitializedAsync()
    {
        await LoadPagedSystemCodes(currentPage);
    }

    private async Task LoadPagedSystemCodes(int page)
    {
        systemcodes = await SystemCodeService.GetPagedSystemCodesAsync(page, pageSize);
    }

    private async Task NextPage()
    {
        if (CanGoToNextPage)
        {
            currentPage++;
            await LoadPagedSystemCodes(currentPage);
        }
    }

    private async Task PreviousPage()
    {
        if (CanGoToPreviousPage)
        {
            currentPage--;
            await LoadPagedSystemCodes(currentPage);
        }
    }

    private string GetButtonStyle(bool isInactive)
    {
        return isInactive ? "opacity: 0.6; pointer-events: none;" : "";
    }

    private bool CanGoToPreviousPage => systemcodes?.CurrentPage > 1;
    private bool CanGoToNextPage => systemcodes?.CurrentPage < systemcodes?.TotalPages;

    private async Task DeleteSystemCode(int id)
    {
        bool confirm = await JsRunTime.InvokeAsync<bool>("confirm", $"Are you sure you want to delete?");
        if (confirm)
        {
            var system = await SystemCodeService.DeleteAsync(id);
            bool result = system != null;
            if (result)
            {
                await LoadPagedSystemCodes(currentPage);
            }
        }
    }
}
