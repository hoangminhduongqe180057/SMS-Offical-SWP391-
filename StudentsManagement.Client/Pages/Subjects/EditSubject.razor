@page "/subject/edit/{id:int}"
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]
@using StudentsManagement.Shared.Models
@inject NavigationManager navigation;
@inject IJSRuntime JsRuntime
@rendermode @(new InteractiveServerRenderMode(prerender: false))

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">Update Subject Details</h3>
            </div>
            <div class="card-body">
                <EditForm Model="subjectobj" OnValidSubmit="UpdateUpdateSubject" FormName="updateCountry">
                    <DataAnnotationsValidator />
                    <ValidationSummary />
                    <div class="col-md-12">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label">Subject Name</label>
                                    <InputText for="Name" class="form-control" @bind-Value="@subjectobj.Name" />
                                    <ValidationMessage For="()=>subjectobj.Name" />
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label">Subject Description</label>
                                    <InputText for="Description" class="form-control" @bind-Value="@subjectobj.Description" />
                                    <ValidationMessage For="()=>subjectobj.Description" />
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label">Editor</label>
                                    <InputText for="CreatedById" class="form-control" @bind-Value="@subjectobj.CreatedById" />
                                    <ValidationMessage For="()=>subjectobj.CreatedById" />
                                </div>
                            </div>
                        </div>
                        <div class="form-group mt-4">
                            <button type="submit" class="btn btn-primary">Save Subject</button>
                            <button type="button" @onclick="()=>Cancel()" class="btn btn-danger">Back to List</button>
                        </div>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</div>
@code {

    [SupplyParameterFromForm]
    public Subject subjectobj { get; set; } = new();


    [Parameter]
    public int id { get; set; }


    protected override async Task OnInitializedAsync()
    {
        await LoadSubject();
    }
    public async Task LoadSubject()
    {
        subjectobj = await SubjectService.GetByIdAsync(id);
    }


    protected async Task UpdateUpdateSubject()
    {
        try
        {
            var result = SubjectService.UpdateAsync(subjectobj);
            StateHasChanged();
            navigation.NavigateTo("/subjects-list", forceLoad: true);
        }
        catch (Exception ex)
        {
            // Log hoặc hiển thị lỗi
            await JsRuntime.InvokeVoidAsync("alert", "Error while saving the subject: " + ex.Message);
        }
    }
    public void Cancel()
    {
        navigation.NavigateTo("/subjects-list", forceLoad: true);
    }
}
