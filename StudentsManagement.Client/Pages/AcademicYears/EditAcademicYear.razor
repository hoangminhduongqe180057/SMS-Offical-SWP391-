@page "/academicYear/edit/{id:int}"
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]
@using StudentsManagement.Shared.Models
@inject NavigationManager navigation;
@inject IJSRuntime JSRuntime
@rendermode @(new InteractiveServerRenderMode(prerender: false))

<h3>Update Academic Year</h3>

<hr />
<div class="row">
    <div class="col-md-12">
        <EditForm Model="academicobj" OnValidSubmit="UpdateAcademicYear" FormName="updateAcademicYear">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="col-md-12">
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="control-label">Academic Year</label>
                            <InputText for="Name" class="form-control" @bind-Value="@academicobj.Name" />
                            <ValidationMessage For="()=>academicobj.Name" />
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="control-label">Start Date</label>
                            <InputDate for="StartDate" class="form-control" @bind-Value="@academicobj.StartDate" />
                            <ValidationMessage For="()=>academicobj.StartDate" />
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="control-label">End Date</label>
                            <InputDate for="EndDate" class="form-control" @bind-Value="@academicobj.EndDate" />
                            <ValidationMessage For="()=>academicobj.EndDate" />
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="control-label">Notes</label>
                            <InputTextArea for="Notes" class="form-control" @bind-Value="@academicobj.Notes" />
                            <ValidationMessage For="()=>academicobj.Notes" />
                        </div>
                    </div>

                </div>
                <div class="form-group mt-4">
                    <button type="submit" class="btn btn-primary">Save Academic Year</button>
                    <button type="button" @onclick="()=>Cancel()" class="btn btn-danger">Back to List</button>
                </div>
            </div>
        </EditForm>
    </div>
</div>

@code {
    [SupplyParameterFromForm]
    public AcademicYears academicobj { get; set; } = new();

    [Parameter]
    public int id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await LoadAcademicYear();
    }

    private async Task LoadAcademicYear()
    {
        academicobj = await AcademicYearService.GetByIdAsync(id);
    }

    protected async Task UpdateAcademicYear()
    {
        try
        {
            var result = await AcademicYearService.UpdateAsync(academicobj);
            navigation.NavigateTo("/academicYears-list", forceLoad: true);
        }
        catch (Exception ex)
        {
            await JSRuntime.InvokeVoidAsync("alert", "Error while updating the academic year: " + ex.Message);
        }
    }

    public void Cancel()
    {
        navigation.NavigateTo("/academicYears-list", forceLoad: true);
    }
}
