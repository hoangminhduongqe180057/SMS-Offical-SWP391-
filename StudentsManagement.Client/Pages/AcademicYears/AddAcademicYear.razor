@page "/add-academicYear"
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]
@using StudentsManagement.Shared.Models
@inject NavigationManager navigation;
@inject IJSRuntime JSRuntime
@rendermode @(new InteractiveServerRenderMode(prerender: false))

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">Add New Academic Year</h3>
            </div>
            <div class="card-body">
                <EditForm Model="academicobj" OnValidSubmit="CreateAcademicYear" FormName="addAcademicYear">
                    <DataAnnotationsValidator />
                    <ValidationSummary />
                    <div class="col-md-12">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label">Academic Year</label>
                                    <InputText for="Name" class="form-control" @bind-Value="@academicobj.Name" />
                                    <ValidationMessage For="()=>academicobj.Name" />
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label">Start Date</label>
                                    <InputDate for="StartDate" class="form-control" @bind-Value="@academicobj.StartDate" />
                                    <ValidationMessage For="()=>academicobj.StartDate" />
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label">End Date</label>
                                    <InputDate for="EndDate" class="form-control" @bind-Value="@academicobj.EndDate" />
                                    <ValidationMessage For="()=>academicobj.EndDate" />
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label">Notes</label>
                                    <InputTextArea for="Notes" class="form-control" @bind-Value="@academicobj.Notes" />
                                    <ValidationMessage For="()=>academicobj.Notes" />
                                </div>
                            </div>

                        </div>
                        <div class="form-group mt-4">
                            <button type="submit" class="btn btn-primary">Save Academic Year</button>
                            <button type="button" @onclick="()=>Cancel()" class="btn btn-danger">Back to List</button>
                        </div>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</div>
@code {
    [SupplyParameterFromForm]
    public AcademicYears academicobj { get; set; } = new();
    List<SystemCodeDetail> BookCategory = new List<SystemCodeDetail>();

    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    protected override async Task OnInitializedAsync()
    {
        
    }

    protected async Task CreateAcademicYear()
    {
        try
        {
            var result = AcademicYearService.AddAsync(academicobj);
            navigation.NavigateTo("/academicYears-list", forceLoad: true);
        }
        catch (Exception ex)
        {
            await JSRuntime.InvokeVoidAsync("alert", "Error while saving the academic year: " + ex.Message);
        }
    }
    public void Cancel()
    {
        navigation.NavigateTo("/academicYears-list", forceLoad: true);
    }
}
