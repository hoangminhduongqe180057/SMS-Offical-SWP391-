@page "/users-list"
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize(Roles = "System")]
@using Microsoft.AspNetCore.Identity
@using Microsoft.JSInterop
@using StudentsManagement.Data
@using StudentsManagement.Shared.Models
@inject IConfiguration config
@inject HttpClient Http
@inject IJSRuntime JsRunTime
@inject NavigationManager navigation
@inject UserManager<ApplicationUser> UserManager
@rendermode @(new InteractiveServerRenderMode(prerender: false))

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">Users List</h3>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-12">
                        <div class="card">
                            <div class="card-header"></div>
                            @if (users == null)
                            {
                                <p><em>Loading Users...</em></p>
                            }
                            else if (!users.Items.Any())
                            {
                                <div class="alert alert-info"> There is no Users List Available</div>
                            }
                            else
                            {
                                <div class="card-body">
                                    <table class="table table-striped table-hover">
                                        <thead>
                                            <tr>
                                                <th>Full Name</th>
                                                <th>Phone Number</th>
                                                <th>Email</th>
                                                <th>Gender</th>
                                                <th>Roles</th>
                                                <th>Status</th>
                                                <th>View</th>
                                                <th>Delete</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var user in users.Items)
                                            {
                                                <tr>
                                                    <td>@user.FullName</td>
                                                    <td>@user.PhoneNumber</td>
                                                    <td>@user.Email</td>
                                                    <td>@user?.Gender.Description</td>
                                                    <td>
                                                        @if (user.Roles != null && user.Roles.Any())
                                                        {
                                                            @foreach (var role in user.Roles)
                                                            {
                                                                <span class="badge me-2" style="background-color: @GetRoleColor(role); color: white;">
                                                                    <i class="@GetRoleIcon(role)"></i> @role
                                                                </span>
                                                            }
                                                        }
                                                        else
                                                        {
                                                            <span class="badge bg-secondary">No Roles</span>
                                                        }
                                                    </td>
                                                    <td>
                                                        @if (@user?.AccountStatus == "Pending")
                                                        {
                                                            <span class="badge bg-warning text-dark">
                                                                <i class="fas fa-clock"></i> Pending
                                                            </span>
                                                        }
                                                        else if (@user?.AccountStatus == "Approved")
                                                        {
                                                            <span class="badge bg-success">
                                                                <i class="fas fa-check-circle"></i> Approved
                                                            </span>
                                                        }
                                                        else
                                                        {
                                                            <span class="badge bg-danger">
                                                                <i class="fas fa-times-circle"></i> Rejected
                                                            </span>
                                                        }
                                                    </td>
                                                    <td>
                                                        <a class="btn btn-primary" href="/user/detail/@user.Id"> View </a>
                                                    </td>
                                                    <td>
                                                        <button class="btn btn-danger" @onclick="() => DeleteUser(user.Id)"> Delete </button>
                                                    </td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>

                                    <!-- Pagination Controls -->
                                    <div class="button-group mt-3">
                                        <button class="btn btn-custom" @onclick="PreviousPage" style="@GetButtonStyle(!CanGoToPreviousPage)">Previous</button>
                                        <button class="btn btn-custom ms-2" @onclick="NextPage" style="@GetButtonStyle(!CanGoToNextPage)">Next</button>
                                    </div>
                                    <p class="mt-2">Page @users.CurrentPage of @users.TotalPages</p>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private PaginationModel<ApplicationUser>? users;
    private int currentPage = 1;
    private int pageSize = 10;

    protected override async Task OnInitializedAsync()
    {
        await LoadPagedUsers(currentPage);
    }

    private async Task LoadPagedUsers(int page)
    {
        var response = await Http.GetFromJsonAsync<PaginationModel<ApplicationUser>>($"api/user?pageNumber={page}&pageSize={pageSize}");
        if (response != null)
        {
            foreach (var user in response.Items)
            {
                var roles = await UserManager.GetRolesAsync(user);
                user.Roles = roles.ToList();  // Gán danh sách vai trò
            }

            users = response;
        }
    }

    private async Task NextPage()
    {
        if (CanGoToNextPage)
        {
            currentPage++;
            await LoadPagedUsers(currentPage);
        }
    }

    private async Task PreviousPage()
    {
        if (CanGoToPreviousPage)
        {
            currentPage--;
            await LoadPagedUsers(currentPage);
        }
    }

    private string GetButtonStyle(bool isInactive)
    {
        return isInactive ? "opacity: 0.6; pointer-events: none;" : "";
    }

    private bool CanGoToPreviousPage => users?.CurrentPage > 1;
    private bool CanGoToNextPage => users?.CurrentPage < users?.TotalPages;

    private async Task DeleteUser(string id)
    {
        var confirmed = await JsRunTime.InvokeAsync<bool>("confirm", "Are you sure you want to delete this user?");
        if (confirmed)
        {
            var response = await Http.DeleteAsync($"api/user/{id}");
            if (response.IsSuccessStatusCode)
            {
                await LoadPagedUsers(currentPage); // Tải lại danh sách sau khi xóa
            }
            else
            {
                await JsRunTime.InvokeVoidAsync("alert", "Failed to delete the user.");
            }
        }
    }

    private string GetRoleColor(string role)
    {
        // Chọn màu sắc dựa trên vai trò
        return role switch
        {
            "System" => "#e74c3c",         // Màu đỏ cho admin tổng
            "SystemCode" => "#8e44ad",    // Màu tím cho system code admin
            "Academic" => "#3498db",       // Màu xanh dương cho academic admin
            "Library" => "#f39c12",        // Màu cam cho library admin
            "FrontOffice" => "#2ecc71",   // Màu xanh lá cho front office admin
            "Hostel" => "#e67e22",         // Màu cam sáng cho hostel admin
            _ => "#7f8c8d"                       // Màu xám cho các vai trò khác
        };
    }

    private string GetRoleIcon(string role)
    {
        // Chọn biểu tượng dựa trên vai trò
        return role switch
        {
            "System Admin" => "fas fa-user-shield",    // Biểu tượng khiên bảo vệ cho admin tổng
            "System Code Admin" => "fas fa-cogs",      // Biểu tượng bánh răng cho system code admin
            "Academic Admin" => "fas fa-graduation-cap", // Biểu tượng mũ tốt nghiệp cho academic admin
            "Library Admin" => "fas fa-book",          // Biểu tượng cuốn sách cho library admin
            "Front Office Admin" => "fas fa-concierge-bell", // Biểu tượng chuông khách sạn cho front office admin
            "Hostel Admin" => "fas fa-bed",            // Biểu tượng giường cho hostel admin
            _ => "fas fa-user-tag"                     // Biểu tượng nhãn mặc định
        };
    }
}
